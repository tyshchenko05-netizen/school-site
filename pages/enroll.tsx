import { useMemo, useState, useEffect } from "react";

/** –í–æ–∑—Ä–∞—Å—Ç ‚Üí –ö–∞—Ç–µ–≥–æ—Ä–∏—è ‚Üí –ö—É—Ä—Å—ã (—Å UI, –º–æ–¥–∞–ª–∫–æ–π, —Ñ–æ—Ä–º–æ–π, —Ü–µ–Ω–æ–π –∏ ¬´–°–ø–∞—Å–∏–±–æ¬ª) */
export default function EnrollPage() {
  type Age = "3-6" | "7-10" | "9-13" | "14-17";
  type Cat = "3D" | "Robotics" | "Coding";

  const [age, setAge] = useState<Age | null>(null);
  const [cat, setCat] = useState<Cat | null>(null);

  const [open, setOpen] = useState(false);
  const [selected, setSelected] = useState<Course | null>(null);

  // —Ñ–æ—Ä–º–∞
  const [showForm, setShowForm] = useState(false);
  const [formSubmitted, setFormSubmitted] = useState(false);

  const brand = {
    grad: "bg-gradient-to-br from-purple-700 via-purple-600 to-purple-800",
    accentText: "text-yellow-300",
    accentBg: "bg-yellow-300 text-purple-900",
    ring: "ring-2 ring-yellow-300",
  };

  const ages = [
    { id: "3-6", label: "3‚Äì6 –ª–µ—Ç", emoji: "üë∂" },
    { id: "7-10", label: "7‚Äì10 –ª–µ—Ç", emoji: "üßí" },
    { id: "9-13", label: "9‚Äì13 –ª–µ—Ç", emoji: "üßë" },
    { id: "14-17", label: "14‚Äì17 –ª–µ—Ç", emoji: "üéì" },
  ] as const;

  const cats = [
    { id: "3D", label: "3D –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ", emoji: "üé®" },
    { id: "Robotics", label: "–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞", emoji: "ü§ñ" },
    { id: "Coding", label: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", emoji: "üíª" },
  ] as const;

  const catalog = useMemo(() => makeCatalog(), []);
  const list = age && cat ? (catalog[age]?.[cat] ?? []) : [];

  // –í–°–ï –∫—É—Ä—Å—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ (–¥–ª—è "–≤—Ç–æ—Ä–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
  const allAgeCourses = useMemo(() => {
    if (!age) return [] as string[];
    const groups = catalog[age]; // Record<Cat, Course[]>
    const titles = ([] as string[]).concat(
      ...(Object.values(groups).map(arr => arr.map(c => c.title)))
    );
    return titles;
  }, [age, catalog]);

  useEffect(() => {
    console.assert(catalog["7-10"].Coding.some(c => c.title === "–ò–≥—Ä—ã –≤ Scratch"), "[Test] –µ—Å—Ç—å –∫—É—Ä—Å Scratch");
  }, [catalog]);

  return (
    <div className="min-h-screen bg-white">
      {/* HERO / –ê–∫—Ü–∏–∏ */}
      <section className={`${brand.grad} text-white`}>
        <div className="max-w-6xl mx-auto px-4 py-10 md:py-14">
          <h1 className="text-3xl md:text-5xl font-extrabold leading-tight">
            –ü–æ–¥–±–æ—Ä –∫—É—Ä—Å–∞ –∏ –∑–∞–ø–∏—Å—å
          </h1>
          <p className="mt-3 text-white/90">
            1‚Äì2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é –ø–æ 2 —á–∞—Å–∞ ‚Ä¢ 9 –º–µ—Å—è—Ü–µ–≤ ‚Ä¢ –≥—Ä—É–ø–ø—ã –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–º.
          </p>

          <div className="mt-6 grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="rounded-2xl bg-white/10 p-4 backdrop-blur-md border border-white/20">
              <div className="text-sm opacity-90">–†–∞–Ω–Ω—è—è —Ü–µ–Ω–∞ –¥–æ —Å–µ–Ω—Ç—è–±—Ä—è</div>
              <div className={`text-2xl font-bold ${brand.accentText}`}>4 400 ‚ÇΩ / –º–µ—Å—è—Ü</div>
              <div className="text-xs opacity-80">–û–ø–ª–∞—Ç–∞ –ø–æ–º–µ—Å—è—á–Ω–æ</div>
            </div>
            <div className="rounded-2xl bg-white/10 p-4 backdrop-blur-md border border-white/20">
              <div className="text-sm opacity-90">–ê–∫—Ü–∏–∏</div>
              <ul className="text-sm mt-1 space-y-1">
                <li>‚Ä¢ –í—Ç–æ—Ä–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ‚Äî <b>-50%</b></li>
                <li>‚Ä¢ –í—Ç–æ—Ä–æ–π —Ä–µ–±—ë–Ω–æ–∫ ‚Äî <b>-50%</b></li>
              </ul>
            </div>
            <div className="rounded-2xl bg-white/10 p-4 backdrop-blur-md border border-white/20">
              <div className="text-sm opacity-90">–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è</div>
              <ul className="text-sm mt-1 space-y-1">
                <li>‚Ä¢ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–∞–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã</li>
                <li>‚Ä¢ –° —Å–µ–Ω—Ç—è–±—Ä—è ‚Äî –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –≤ –∫–æ–Ω—Ü–µ –º–æ–¥—É–ª—è</li>
              </ul>
            </div>
          </div>
        </div>
      </section>

      {/* –®–∞–≥–∏ */}
      <div className="max-w-6xl mx-auto px-4 py-8 space-y-10">
        {/* –®–∞–≥ 1 ‚Äî –≤–æ–∑—Ä–∞—Å—Ç */}
        {!age && (
          <section>
            <h2 className="text-xl font-bold mb-4">1) –í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç</h2>
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
              {ages.map(a => (
                <div key={a.id} className={`rounded-2xl border p-4 bg-white hover:shadow-xl transition ${brand.ring}`}>
                  <div className="flex items-center gap-3">
                    <div className={`p-2 rounded-xl ${brand.grad} ${brand.accentText}`}>{a.emoji}</div>
                    <div className="font-semibold">{a.label}</div>
                  </div>
                  <button
                    className="mt-3 w-full px-3 py-2 rounded-md bg-gray-900 text-white hover:opacity-90"
                    onClick={() => setAge(a.id as Age)}
                  >
                    –í—ã–±—Ä–∞—Ç—å
                  </button>
                </div>
              ))}
            </div>
          </section>
        )}

        {/* –®–∞–≥ 2 ‚Äî –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ */}
        {age && !cat && (
          <section>
            <div className="mb-3 flex items-center gap-2">
              <button className="text-sm underline" onClick={() => setAge(null)}>‚Üê –∏–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç</button>
              <span className="text-sm text-gray-500">–í—ã–±—Ä–∞–Ω–æ: {ages.find(a=>a.id===age)?.label}</span>
            </div>
            <h2 className="text-xl font-bold mb-4">2) –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</h2>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              {cats.map(c => (
                <div key={c.id} className={`rounded-2xl border p-4 bg-white hover:shadow-xl transition ${brand.ring}`}>
                  <div className="flex items-center gap-3">
                    <div className={`p-2 rounded-xl ${brand.grad} ${brand.accentText}`}>{c.emoji}</div>
                    <div className="font-semibold">{c.label}</div>
                  </div>
                  <p className="text-sm text-gray-500 mt-2">
                    {c.id==="3D" && "–î–∏–∑–∞–π–Ω, 3D-–º–æ–¥–µ–ª–∏, –ø–µ—á–∞—Ç—å, VR"}
                    {c.id==="Robotics" && "LEGO/Arduino, –ø–∞–π–∫–∞, –¥—Ä–æ–Ω—ã"}
                    {c.id==="Coding" && "–ò–≥—Ä—ã, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, Python/Lua"}
                  </p>
                  <button
                    className="mt-3 w-full px-3 py-2 rounded-md bg-gray-900 text-white hover:opacity-90"
                    onClick={() => setCat(c.id as Cat)}
                  >
                    –î–∞–ª–µ–µ
                  </button>
                </div>
              ))}
            </div>
          </section>
        )}

        {/* –®–∞–≥ 3 ‚Äî –∫—É—Ä—Å—ã */}
        {age && cat && (
          <section className="space-y-4">
            <div className="flex items-center gap-3 flex-wrap">
              <button className="text-sm underline" onClick={() => setCat(null)}>‚Üê –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</button>
              <span className="text-sm text-gray-500">
                –í–æ–∑—Ä–∞—Å—Ç: {ages.find(a=>a.id===age)?.label} ‚Ä¢ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {cats.find(c=>c.id===cat)?.label}
              </span>
            </div>

            <h2 className="text-xl font-bold">3) –í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {list.map((c) => (
                <div key={c.title} className="rounded-2xl border bg-white p-4 hover:shadow-xl transition">
                  <div className="flex items-center gap-3">
                    <div className={`p-2 rounded-xl ${brand.grad} ${brand.accentText}`}>‚≠ê</div>
                    <div>
                      <div className="font-semibold">{c.title}</div>
                      <div className="text-sm text-gray-500">{c.subtitle}</div>
                    </div>
                  </div>
                  <p className="text-sm mt-2">{c.desc}</p>
                  <ul className="text-xs text-gray-500 mt-2 list-disc pl-5">
                    <li>9 –º–µ—Å—è—Ü–µ–≤ ‚Ä¢ 36 –∑–∞–Ω—è—Ç–∏–π –ø–æ 2 —á–∞—Å–∞</li>
                    <li>–†–∞–Ω–Ω—è—è —Ü–µ–Ω–∞: <b>4 400 ‚ÇΩ / –º–µ—Å—è—Ü</b></li>
                    <li>–í—Ç–æ—Ä–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ‚Äî <b>-50%</b></li>
                    <li>–í—Ç–æ—Ä–æ–π —Ä–µ–±—ë–Ω–æ–∫ ‚Äî <b>-50%</b></li>
                  </ul>
                  <div className="mt-3 grid grid-cols-2 gap-2">
                    <button
                      className="px-3 py-2 rounded-md bg-gray-900 text-white hover:opacity-90"
                      onClick={() => { setSelected(c); setOpen(true); }}
                    >
                      –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </button>
                    <button
                      className="px-3 py-2 rounded-md border hover:bg-gray-50"
                      onClick={() => { setSelected(c); setOpen(true); }}
                    >
                      –í—ã–±—Ä–∞—Ç—å –∫—É—Ä—Å
                    </button>
                  </div>
                </div>
              ))}
            </div>
          </section>
        )}
      </div>

      {/* ===== –ú–æ–¥–∞–ª–∫–∞ –∫—É—Ä—Å–∞ (–æ–ø–∏—Å–∞–Ω–∏–µ) ===== */}
      {open && selected && (
        <div className="fixed inset-0 z-50">
          <div className="absolute inset-0 bg-black/50" onClick={() => setOpen(false)} />
          <div className="absolute inset-0 flex items-center justify-center p-4">
            <div className="w-full max-w-3xl rounded-2xl border bg-white shadow-2xl">
              <div className="p-4 border-b flex items-center justify-between">
                <div>
                  <div className="text-lg font-semibold">{selected.title}</div>
                  <div className="text-sm text-gray-500">{selected.subtitle}</div>
                </div>
                <button className="p-2 rounded-md hover:bg-gray-100" onClick={() => setOpen(false)}>‚úï</button>
              </div>

              <div className="p-4 space-y-4 max-h-[75vh] overflow-y-auto" style={{ WebkitOverflowScrolling: "touch" }}>
                <p className="text-sm leading-relaxed">{selected.desc}</p>

                {selected.program && (
                  <div className="rounded-xl border p-4">
                    <p className="font-medium mb-2">–ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞ 9 –º–µ—Å—è—Ü–µ–≤</p>
                    <ol className="space-y-2 text-sm list-decimal pl-5">
                      {selected.program.map((row, i) => (
                        <li key={i}><b>{row.month}:</b> {row.topic}</li>
                      ))}
                    </ol>
                  </div>
                )}

                <div className="rounded-xl border p-4 flex flex-col md:flex-row gap-4 md:items-center md:justify-between">
                  <div className="font-semibold">4 400 ‚ÇΩ / –º–µ—Å—è—Ü <span className="text-sm text-gray-500">(–¥–æ —Å–µ–Ω—Ç—è–±—Ä—è)</span></div>
                  <ul className="text-xs text-gray-500 space-y-1">
                    <li>‚Ä¢ –í—Ç–æ—Ä–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ‚Äî 50%</li>
                    <li>‚Ä¢ –í—Ç–æ—Ä–æ–π —Ä–µ–±—ë–Ω–æ–∫ ‚Äî 50%</li>
                    <li>‚Ä¢ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–∞–±–æ—Ä–∞</li>
                    <li>‚Ä¢ –° —Å–µ–Ω—Ç—è–±—Ä—è ‚Äî –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –≤ –∫–æ–Ω—Ü–µ –º–æ–¥—É–ª—è</li>
                  </ul>
                </div>
              </div>

              <div className="p-4 border-t flex gap-2 justify-end">
                <button
                  className="px-4 py-2 rounded-md border hover:bg-gray-50"
                  onClick={() => setOpen(false)}
                >
                  –ó–∞–∫—Ä—ã—Ç—å
                </button>
                <button
                  className="px-4 py-2 rounded-md bg-gray-900 text-white hover:opacity-90"
                  onClick={() => { setOpen(false); setShowForm(true); }}
                >
                  –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
                </button>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* ===== –§–û–†–ú–ê –ó–ê–ü–ò–°–ò (–º–æ–¥–∞–ª–∫–∞ —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π –Ω–∞ –º–æ–±–∏–ª–∫–∞—Ö) ===== */}
      {showForm && !formSubmitted && selected && (
        <div
          className="fixed inset-0 z-50 overflow-y-auto overscroll-contain"
          style={{ WebkitOverflowScrolling: "touch" }}
        >
          <div className="min-h-full flex items-center justify-center p-4">
            <div className="fixed inset-0 bg-black/50" onClick={()=>setShowForm(false)} />
            <div
              className="relative w-full max-w-2xl rounded-2xl border bg-white shadow-2xl max-h-[85vh] overflow-y-auto"
              style={{ WebkitOverflowScrolling: "touch" }}
            >
              <div className="p-4 border-b flex items-center justify-between sticky top-0 bg-white z-10">
                <div>
                  <div className="text-lg font-semibold">–ó–∞–ø–∏—Å—å –Ω–∞ –∫—É—Ä—Å</div>
                  <div className="text-sm text-gray-500">{selected.title} ‚Äî {selected.subtitle}</div>
                </div>
                <button className="p-2 rounded-md hover:bg-gray-100" onClick={()=>setShowForm(false)}>‚úï</button>
              </div>

              <FormBlock
                selectedTitle={selected.title}
                allSecondOptions={allAgeCourses.filter(t => t !== selected.title)}
                ageLabel={ages.find(a=>a.id===age!)?.label || ""}
                catLabel={cats.find(c=>c.id===cat!)?.label || ""}
                onCancel={()=>setShowForm(false)}
                onSubmitSuccess={()=>setFormSubmitted(true)}
              />
              <div className="h-4 md:h-6" /> {/* –Ω–µ–±–æ–ª—å—à–æ–π –Ω–∏–∂–Ω–∏–π –æ—Ç—Å—Ç—É–ø */}
            </div>
          </div>
        </div>
      )}

      {/* ===== –°–ü–ê–°–ò–ë–û ===== */}
      {showForm && formSubmitted && (
        <div className="fixed inset-0 z-50">
          <div className="absolute inset-0 bg-black/50" />
          <div className="absolute inset-0 flex items-center justify-center p-4">
            <div className="w-full max-w-md rounded-2xl border bg-white shadow-2xl p-6 text-center">
              <div className="text-3xl">üéâ</div>
              <h3 className="text-xl font-bold mt-2">–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É!</h3>
              <p className="text-sm text-gray-600 mt-2">
                –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–ø–∏—Å—å –∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.
              </p>
              <div className="mt-4 flex gap-2 justify-center">
                <button className="px-4 py-2 rounded-md bg-gray-900 text-white hover:opacity-90"
                        onClick={() => { setFormSubmitted(false); setShowForm(false); }}>
                  –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫—É—Ä—Å–∞–º
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

/* ---------- –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã ---------- */
function FormBlock({
  selectedTitle,
  allSecondOptions,
  ageLabel,
  catLabel,
  onCancel,
  onSubmitSuccess,
}: {
  selectedTitle: string;
  allSecondOptions: string[];
  ageLabel: string;
  catLabel: string;
  onCancel: () => void;
  onSubmitSuccess: () => void;
}) {
  const [parentName, setParentName] = useState("");
  const [phone, setPhone] = useState("");
  const [email, setEmail] = useState("");
  const [childName, setChildName] = useState("");
  const [timePref, setTimePref] = useState("");
  const [secondCourse, setSecondCourse] = useState("");
  const [secondChild, setSecondChild] = useState(false);
  const [loading, setLoading] = useState(false);

  const BASE = 4400;
  // –ø—Ä–∞–≤–∏–ª–æ: —Å–∫–∏–¥–∫–∏ –ù–ï —Å—É–º–º–∏—Ä—É—é—Ç—Å—è
  const TOTAL = secondChild
    ? Math.round(BASE * 0.5)                         // –≤—Ç–æ—Ä–æ–π —Ä–µ–±—ë–Ω–æ–∫ -50%
    : BASE + (secondCourse ? Math.round(BASE * 0.5) : 0); // –≤—Ç–æ—Ä–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ -50%

  const breakdown = secondChild
    ? [{ label: "–°–∫–∏–¥–∫–∞ 50% (–≤—Ç–æ—Ä–æ–π —Ä–µ–±—ë–Ω–æ–∫)", amount: Math.round(BASE * 0.5) }]
    : [
        { label: "–û—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å", amount: BASE },
        ...(secondCourse ? [{ label: "–í—Ç–æ—Ä–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (-50%)", amount: Math.round(BASE * 0.5) }] : []),
      ];

  const submit = async (e: React.FormEvent) => {
    e.preventDefault();

    const norm = (s: string) => s.replace(/\s+/g, " ").trim();
    const req = {
      "–§–ò–û —Ä–æ–¥–∏—Ç–µ–ª—è": norm(parentName),
      "–¢–µ–ª–µ—Ñ–æ–Ω": norm(phone),
      "E-mail": norm(email),
      "–ò–º—è —Ä–µ–±—ë–Ω–∫–∞": norm(childName),
      "–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è": norm(timePref),
    };
    const missing = Object.entries(req).filter(([,v]) => v === "").map(([k]) => k);
    if (missing.length) {
      alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: " + missing.join(", "));
      return;
    }

    try {
      setLoading(true);
      const payload = {
        course: selectedTitle,
        age: ageLabel,
        category: catLabel,
        parentName: req["–§–ò–û —Ä–æ–¥–∏—Ç–µ–ª—è"],
        phone: req["–¢–µ–ª–µ—Ñ–æ–Ω"],
        email: req["E-mail"],
        childName: req["–ò–º—è —Ä–µ–±—ë–Ω–∫–∞"],
        timePref: req["–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è"],
        secondCourse: norm(secondCourse || "‚Äî"),
        secondChild,
        pricePerMonth: TOTAL,
      };
      const r = await fetch("/api/apply", {
        method: "POST",
        headers: { "Content-Type":"application/json" },
        body: JSON.stringify(payload),
      });
      const j = await r.json();
      if (!j.ok) throw new Error(j.error || "send failed");
      onSubmitSuccess();
    } catch (err:any) {
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É: " + (err?.message || "–æ—à–∏–±–∫–∞ —Å–µ—Ç–∏"));
    } finally {
      setLoading(false);
    }
  };

  return (
    <form className="p-4 space-y-4" onSubmit={submit}>
      <div className="rounded-xl border p-3 bg-gray-50">
        <div className="text-sm text-gray-600">
          –í—ã –≤—ã–±—Ä–∞–ª–∏: <b>{selectedTitle}</b> ‚Ä¢ {ageLabel} ‚Ä¢ {catLabel}
        </div>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
        <Field label="–§–ò–û —Ä–æ–¥–∏—Ç–µ–ª—è *" value={parentName} onChange={setParentName} />
        <Field label="–¢–µ–ª–µ—Ñ–æ–Ω *" value={phone} onChange={setPhone} placeholder="+7" />
        <Field label="E-mail *" value={email} onChange={setEmail} />
        <Field label="–ò–º—è —Ä–µ–±—ë–Ω–∫–∞ *" value={childName} onChange={setChildName} />
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
        <Select
          label="–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è *"
          value={timePref}
          onChange={setTimePref}
          options={["–ë—É–¥–Ω–∏ —É—Ç—Ä–æ","–ë—É–¥–Ω–∏ –≤–µ—á–µ—Ä","–í—ã—Ö–æ–¥–Ω—ã–µ —É—Ç—Ä–æ","–í—ã—Ö–æ–¥–Ω—ã–µ –≤–µ—á–µ—Ä"]}
        />
        <Select
          label="–í—Ç–æ—Ä–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (-50%)"
          value={secondCourse}
          onChange={setSecondCourse}
          options={allSecondOptions}
          disabled={secondChild}
          placeholder="‚Äî –Ω–µ –≤—ã–±—Ä–∞–Ω–æ ‚Äî"
        />
      </div>

      <label className="flex items-center gap-2 text-sm">
        <input
          type="checkbox"
          checked={secondChild}
          onChange={(e) => {
            const v = e.target.checked;
            setSecondChild(v);
            if (v) setSecondCourse("");
          }}
        />
        <span>–í—Ç–æ—Ä–æ–π —Ä–µ–±—ë–Ω–æ–∫ (-50%)</span>
      </label>
      <p className="text-xs text-gray-500">
        –°–∫–∏–¥–∫–∏ –Ω–µ —Å—É–º–º–∏—Ä—É—é—Ç—Å—è: –ª–∏–±–æ ¬´–≤—Ç–æ—Ä–æ–π —Ä–µ–±—ë–Ω–æ–∫ ‚àí50%¬ª, –ª–∏–±–æ ¬´–≤—Ç–æ—Ä–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ‚àí50%¬ª.
      </p>

      <div className="rounded-xl border p-3">
        <div className="text-sm">–°—Ç–æ–∏–º–æ—Å—Ç—å –∫ –æ–ø–ª–∞—Ç–µ –∑–∞ –º–µ—Å—è—Ü</div>
        <div className="mt-2 overflow-x-auto">
          <table className="w-full text-sm">
            <tbody>
              {breakdown.map((r, i) => (
                <tr key={i} className={i>0 ? "border-t" : ""}>
                  <td className="py-1 pr-2 text-gray-600">{r.label}</td>
                  <td className="py-1 font-medium">{r.amount.toLocaleString("ru-RU")} ‚ÇΩ</td>
                </tr>
              ))}
              <tr className="border-t">
                <td className="py-2 pr-2 font-semibold">–ò—Ç–æ–≥–æ</td>
                <td className="py-2 font-bold">{TOTAL.toLocaleString("ru-RU")} ‚ÇΩ</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>

      <div className="flex items-center justify-end gap-2 pb-[calc(env(safe-area-inset-bottom,0)+8px)]">
        <button type="button" className="px-4 py-2 rounded-md border hover:bg-gray-50" onClick={onCancel}>
          –û—Ç–º–µ–Ω–∞
        </button>
        <button type="submit" disabled={loading}
          className="px-4 py-2 rounded-md bg-gray-900 text-white hover:opacity-90 disabled:opacity-60">
          {loading ? "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"}
        </button>
      </div>
    </form>
  );
}

/* –º–∞–ª–µ–Ω—å–∫–∏–µ UI-–ø–æ–º–æ—â–Ω–∏–∫–∏ */
function Field({
  label, value, onChange, placeholder="",
}:{
  label:string; value:string; onChange:(v:string)=>void; placeholder?:string;
}) {
  const isEmail = /email/i.test(label);
  const isRequired = /\*/.test(label);
  return (
    <label className="block text-sm">
      <span className="text-gray-700">{label}</span>
      <input
        className="mt-1 w-full rounded-md border p-2"
        value={value}
        onChange={e=>onChange(e.target.value)}
        placeholder={placeholder}
        type={isEmail ? "email" : "text"}
        required={isRequired}
      />
    </label>
  );
}

function Select({
  label, value, onChange, options, disabled=false, placeholder="‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ ‚Äî",
}:{
  label:string; value:string; onChange:(v:string)=>void; options:string[]; disabled?:boolean; placeholder?:string;
}) {
  const isRequired = /\*/.test(label);
  return (
    <label className="block text-sm">
      <span className="text-gray-700">{label}</span>
      <select
        className="mt-1 w-full rounded-md border p-2 disabled:bg-gray-100"
        value={value}
        onChange={e=>{
          const v = e.target.value.replace(/\s+/g, " ").trim();
          onChange(v);
        }}
        disabled={disabled}
        required={isRequired}
      >
        {/* —è–≤–Ω—ã–π –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º "" */}
        <option value="">{placeholder}</option>
        {options.map(o => {
          const v = (o ?? "").toString();
          return <option key={v || "none"} value={v}>{v || "‚Äî"}</option>;
        })}
      </select>
    </label>
  );
}

/* ---------- –¥–∞–Ω–Ω—ã–µ ---------- */
type Course = {
  title: string;
  subtitle: string;
  desc: string;
  program?: { month: string; topic: string }[];
};

function makeCatalog(): Record<
  "3-6" | "7-10" | "9-13" | "14-17",
  Record<"3D" | "Robotics" | "Coding", Course[]>
> {
  return {
    "3-6": {
      "3D": [
        { title: "–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏ –≤ –∫–æ–¥–∏–Ω–≥–µ", subtitle: "ScratchJr + LEGO WeDo", desc: "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏ –ø—Ä–æ—Å—Ç—ã–µ —Ä–æ–±–æ—Ç—ã." },
      ],
      "Robotics": [
        { title: "LEGO WeDo Starter", subtitle: "–ö–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –¥–∞—Ç—á–∏–∫–∏", desc: "–°–æ–±–∏—Ä–∞–µ–º —Ä–æ–±–æ—Ç–æ–≤-–∑–≤–µ—Ä—è—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∏—Ö." },
      ],
      "Coding": [
        { title: "ScratchJr –ò—Å—Ç–æ—Ä–∏–∏", subtitle: "–ü–µ—Ä–≤—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã", desc: "–î–≤–∏–∂–µ–Ω–∏–µ, –∑–≤—É–∫, –ø—Ä–æ—Å—Ç—ã–µ —Ä–µ–∞–∫—Ü–∏–∏." },
      ],
    },
    "7-10": {
      "3D": [
        { title: "3D-–ú–∞—Å—Ç–µ—Ä", subtitle: "Tinkercad ‚Ä¢ 3D-–ø–µ—á–∞—Ç—å", desc: "–ú–æ–¥–µ–ª–∏—Ä—É–µ–º –∏ –ø–µ—á–∞—Ç–∞–µ–º –∏–∑–¥–µ–ª–∏—è, VR-–ø—Ä–æ—Å–º–æ—Ç—Ä." },
      ],
      "Robotics": [
        { title: "Junior Robotics", subtitle: "LEGO SPIKE/EV3 ‚Ä¢ Arduino", desc: "–†–æ–±–æ—Ç—ã, —Å–µ–Ω—Å–æ—Ä—ã –∏ –±–∞–∑–æ–≤–∞—è –ø–∞–π–∫–∞." },
      ],
      "Coding": [
        {
          title: "–ò–≥—Ä—ã –≤ Scratch",
          subtitle: "–°–ø—Ä–∞–π—Ç—ã, —É—Ä–æ–≤–Ω–∏, —ç—Ñ—Ñ–µ–∫—Ç—ã",
          desc: "–î–µ–ª–∞–µ–º –º–∏–Ω–∏-–∏–≥—Ä—ã, —É—á–∏–º—Å—è –ª–æ–≥–∏–∫–µ, –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é.",
          program: [
            { month: "–°–µ–Ω—Ç—è–±—Ä—å", topic: "–í–≤–µ–¥–µ–Ω–∏–µ, —Å–ø—Ä–∞–π—Ç—ã, —Å—Ü–µ–Ω—ã, —Å–æ–±—ã—Ç–∏—è" },
            { month: "–û–∫—Ç—è–±—Ä—å", topic: "–î–≤–∏–∂–µ–Ω–∏–µ, —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è, —Ç–∞–π–º–µ—Ä—ã" },
            { month: "–ù–æ—è–±—Ä—å", topic: "–û—á–∫–∏, —É—Ä–æ–≤–Ω–∏, —Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞" },
            { month: "–î–µ–∫–∞–±—Ä—å", topic: "–ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π, –∑–≤—É–∫–∏, UI" },
            { month: "–Ø–Ω–≤–∞—Ä—å", topic: "–ñ–∞–Ω—Ä—ã: –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ—Ä, –∞—Ä–∫–∞–¥–∞" },
            { month: "–§–µ–≤—Ä–∞–ª—å", topic: "–ö–≤–µ—Å—Ç—ã –∏ –∑–∞–¥–∞—á–∏" },
            { month: "–ú–∞—Ä—Ç", topic: "–ë–∞–ª–∞–Ω—Å –∏ –ø–ª–µ–π—Ç–µ—Å—Ç—ã" },
            { month: "–ê–ø—Ä–µ–ª—å", topic: "–ü–æ–ª–∏—Ä–æ–≤–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è" },
            { month: "–ú–∞–π", topic: "–ü–æ–∫–∞–∑ —Ä–æ–¥–∏—Ç–µ–ª—è–º" },
          ],
        },
        { title: "Minecraft —Å –∫–æ–¥–æ–º", subtitle: "MakeCode / Python", desc: "–ö–≤–µ—Å—Ç—ã –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–æ—Å—Ç—Ä–æ–µ–∫." },
        { title: "–¶–∏—Ñ—Ä–æ–≤—ã–µ —Å—É–ø–µ—Ä–≥–µ—Ä–æ–∏", subtitle: "–ü–ö + Word/Excel/PowerPoint", desc: "–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å." },
      ],
    },
    "9-13": {
      "3D": [
        { title: "Digital Design Studio", subtitle: "Figma ‚Ä¢ –≥—Ä–∞—Ñ–∏–∫–∞", desc: "–ê—Ñ–∏—à–∏, –ø–µ—Ä—Å–æ–Ω–∞–∂–∏, –º–∞–∫–µ—Ç—ã UI." },
        { title: "3D-–ò–Ω–∂–µ–Ω–µ—Ä", subtitle: "Blender ‚Ä¢ –ø–µ—á–∞—Ç—å", desc: "–ú–æ–¥–µ–ª–∏ –¥–ª—è –ø–µ—á–∞—Ç–∏ –∏ –∞–Ω–∏–º–∞—Ü–∏—è." },
      ],
      "Robotics": [
        { title: "TechLab Robotics", subtitle: "Arduino ‚Ä¢ –ø–∞–π–∫–∞ ‚Ä¢ –¥—Ä–æ–Ω—ã", desc: "–ü—Ä–æ—Ç–æ—Ç–∏–ø—ã –∏ –ø–æ–ª—ë—Ç—ã –ø–æ –∫–æ–¥—É." },
      ],
      "Coding": [
        { title: "2D Game Lab", subtitle: "Construct 3", desc: "–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–µ 2D-–∏–≥—Ä—ã –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è." },
        { title: "Mobile App Lab", subtitle: "MIT App Inventor", desc: "Android-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –¥–∞—Ç—á–∏–∫–∏." },
        { title: "Roblox Studio", subtitle: "Lua-—Å–∫—Ä–∏–ø—Ç—ã", desc: "–ú–∏—Ä—ã –∏ –º–µ—Ö–∞–Ω–∏–∫–∏ –Ω–∞ Lua." },
      ],
    },
    "14-17": {
      "3D": [
        { title: "3D PRO", subtitle: "Blender ‚Ä¢ Unity", desc: "–ò–≥—Ä–æ–≤—ã–µ –º–æ–¥–µ–ª–∏ –∏ —ç–∫—Å–ø–æ—Ä—Ç –≤ –¥–≤–∏–∂–∫–∏." },
      ],
      "Robotics": [
        { title: "Robotics PRO", subtitle: "Arduino PRO ‚Ä¢ IoT", desc: "–£–º–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–µ —Ä–æ–±–æ—Ç—ã." },
      ],
      "Coding": [
        { title: "Unity / Unreal PRO", subtitle: "C# / Blueprint", desc: "2D/3D-–∏–≥—Ä—ã –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è." },
        { title: "–ò–ò-–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", subtitle: "Python + –Ω–µ–π—Ä–æ—Å–µ—Ç–∏", desc: "CV, NLP –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞." },
        { title: "–≠—Ç–∏—á–Ω—ã–π —Ö–∞–∫–∏–Ω–≥", subtitle: "–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", desc: "–°–µ—Ç–∏, —É—è–∑–≤–∏–º–æ—Å—Ç–∏, secure-dev." },
      ],
    },
  };
}
